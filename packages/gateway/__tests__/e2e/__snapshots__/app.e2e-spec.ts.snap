// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppController (e2e) /export-providers (GET) 1`] = `
"ss1 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true
ss2 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=www.bing.com
vmess = vmess, server, 443, username=uuid
http 1 = https, server, 443, username, password, skip-cert-verify=false
http 2 = http, server, 443, username, password
snell = snell, server, 44046, psk=yourpsk, obfs=http
ss4 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=example.com"
`;

exports[`AppController (e2e) /export-providers (GET) global filter 1`] = `"üá∫üá≤ US = custom, us.example.com, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true, obfs=tls, obfs-host=gateway-carry.icloud.com, tfo=true"`;

exports[`AppController (e2e) /export-providers (GET) internal filter 1`] = `""`;

exports[`AppController (e2e) /export-providers (GET) multiple providers 1`] = `
"ss1 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true
ss2 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=www.bing.com
vmess = vmess, server, 443, username=uuid
http 1 = https, server, 443, username, password, skip-cert-verify=false
http 2 = http, server, 443, username, password
snell = snell, server, 44046, psk=yourpsk, obfs=http
ss4 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=example.com
üá∫üá≤ US = custom, us.example.com, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true, obfs=tls, obfs-host=gateway-carry.icloud.com, tfo=true
Snell = snell, us.example.com, 443, psk=password, obfs=tls
HTTPS = https, us.example.com, 443, username, password"
`;

exports[`AppController (e2e) /export-providers (GET) multiple providers 404 1`] = `"{\\"statusCode\\":404,\\"error\\":\\"provider notfound ‰∏çÂ≠òÂú®\\"}"`;

exports[`AppController (e2e) /export-providers (GET) private filter 1`] = `
"ss1 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true
ss2 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=www.bing.com
vmess = vmess, server, 443, username=uuid
ss4 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=example.com
üá∫üá≤ US = custom, us.example.com, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true, obfs=tls, obfs-host=gateway-carry.icloud.com, tfo=true"
`;

exports[`AppController (e2e) /export-providers (GET) using template 1`] = `
"https://example.com/export-providers?providers=clash%2Ccustom&template=export&access_token=abcd

ss1 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true
ss2 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=www.bing.com
vmess = vmess, server, 443, username=uuid
http 1 = https, server, 443, username, password, skip-cert-verify=false
http 2 = http, server, 443, username, password
snell = snell, server, 44046, psk=yourpsk, obfs=http
ss4 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=example.com
üá∫üá≤ US = custom, us.example.com, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true, obfs=tls, obfs-host=gateway-carry.icloud.com, tfo=true
Snell = snell, us.example.com, 443, psk=password, obfs=tls
HTTPS = https, us.example.com, 443, username, password
"
`;

exports[`AppController (e2e) /get-artifact (GET) 1`] = `
"üá∫üá∏US 1 = custom, us.example.com, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, obfs=tls, obfs-host=gateway-carry.icloud.com
üá∫üá∏US 2 = custom, us.example.com, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module
üá∫üá≤ US = custom, us.example.com, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true, obfs=tls, obfs-host=gateway-carry.icloud.com, tfo=true
Snell = snell, us.example.com, 443, psk=password, obfs=tls
HTTPS = https, us.example.com, 443, username, password
ss1 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=true
ss2 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=www.bing.com
vmess = vmess, server, 443, username=uuid
http 1 = https, server, 443, username, password, skip-cert-verify=false
http 2 = http, server, 443, username, password
snell = snell, server, 44046, psk=yourpsk, obfs=http
ss4 = custom, server, 443, chacha20-ietf-poly1305, password, https://raw.githubusercontent.com/ConnersHua/SSEncrypt/master/SSEncrypt.module, udp-relay=false, obfs=tls, obfs-host=example.com
----
üá∫üá∏US 1, üá∫üá∏US 2, üá∫üá∏US 3, üá∫üá≤ US, Snell, HTTPS, ss1, ss2, ss3, vmess, http 1, http 2, snell, ss4, ss-wss
"
`;

exports[`AppController (e2e) /get-artifact (GET) custom params 1`] = `
"original
----
original
"
`;

exports[`AppController (e2e) /get-artifact (GET) custom params 2`] = `
"new
----
new
"
`;

exports[`AppController (e2e) /render (GET) 1`] = `
"#!name=MitM All Hostnames
#!desc=Perform MitM on all hostnames with port 443, except those to Apple and other common sites which can't be inspected. You still need configure CA certificate and enable the main switch of MitM.
#https://example.com/render?template=render&access_token=abcd

[MITM]
hostname = -*.apple.com, -*.icloud.com, -*.mzstatic.com, -*.crashlytics.com, -*.facebook.com, -*.instagram.com, *
"
`;

exports[`AppController (e2e) /render (GET) sub folder 1`] = `
"#!name=MitM All Hostnames
#!desc=Perform MitM on all hostnames with port 443, except those to Apple and other common sites which can't be inspected. You still need configure CA certificate and enable the main switch of MitM.
#https://example.com/render?template=sub-folder%2Frender&access_token=abcd

[MITM]
hostname = -*.apple.com, -*.icloud.com, -*.mzstatic.com, -*.crashlytics.com, -*.facebook.com, -*.instagram.com, *
"
`;
